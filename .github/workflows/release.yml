# This file is part of the PPCRE.
#
# (c) Serghei Iakovlev <egrep@protonmail.ch>
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

name: release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set environment variables
        uses: allenevans/set-env@v1.0.0
        with:
          BOX_VERSION: '3.8.4'

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.2'
          extensions: intl, zip, zlib
          coverage: none
          ini-values: memory_limit=1G, phar.readonly=0

      - name: Common settings
        run: |
          git config --global user.name cicdbot
          git config --global user.email team@zephir-lang.com

          # Choose a suitable PHP version to build PHAR
          composer config platform.php 7.0.33

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Setup Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys:
            ${{ runner.os }}-composer-${{ env.cache-name }}-
            ${{ runner.os }}-composer-
            ${{ runner.os }}-

      - name: Setup GitHub Token
        run: |
          # To increase the GitHub rate limit we're use GitHub authentication
          if [ -n "${{ secrets.COMPOSER_TOKEN }}" ]; then
            composer config github-oauth.github.com "${{ secrets.COMPOSER_TOKEN }}"
          fi

      - name: Install project dependencies
        run: composer install --prefer-dist --no-interaction --no-ansi --no-progress --no-suggest

      - name: Install Box
        run: |
          wget \
            "https://github.com/humbug/box/releases/download/${BOX_VERSION}/box.phar" \
            --quiet \
            -O ./box

          chmod +x ./box
          sudo mv ./box /usr/local/bin

      - name: Build Application PHAR
        run: |
          .github/build-phar.sh
          ls -al ./example.phar
          cat ".git/${{ github.ref }}"

      - name: Get Git Version
        id: get-version
        run: |
          echo ::set-output name=version::${GITHUB_REF#refs/tags/}
          echo 'Pushing version ${{ steps.get-version.outputs.version }}'

      - name: Get Application Version
        # Self-test
        run: |
          ./example.phar --version

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ steps.get-version.outputs.version }}
          tag: ${{ steps.get-version.outputs.version }}
          body: 'Next stable release.'
          allowUpdates: true
          artifact: example.phar
          artifactContentType: application/x-php

      # - name: Create Release
      #   uses: sondreb/action-release@master
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     files: 'example.phar'
      #     folder: './'
      #     tag: ${{ steps.get-version.outputs.version }}
      #     name: ${{ steps.get-version.outputs.version }}
      #     body: 'Next stable release.'
      #     # This will create a draft
      #     draft: true
      #     prerelease: false

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     # This token is provided by Actions, you do not need to create your own token
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     # This pulls from the 'Create Release' step above,
      #     # referencing it's ID to get its outputs object,
      #     # which include a 'upload_url'.  See this blog post for more info:
      #     # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     upload_url: ${{ steps.create-release.outputs.upload_url }}
      #     asset_path: ./example.phar
      #     asset_name: example.phar
      #     asset_content_type: application/x-php
